name: Update data, Build site, and Deploy site to Pages

on:
  # 手動実行
  workflow_dispatch:
  # mainブランチへのpush
  push:
    branches: ["main"]
  # 定期実行
  schedule:
    # UTCで実行されているのでJST AM0時過ぎに実行される
    - cron: "8 15 * * *"

# GitHub Pagesへのデプロイを許可
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # サブモジュールの更新
  update:
    name: Update Submodules
    runs-on: ubuntu-latest
    env:
      TZ: "Asia/Tokyo"
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursice
      - name: Update submodules
        id: update
        run: git submodule update --remote --init
      - name: Run git status
        id: status
        run: echo "{status}={$(git status -s)} >> $GITHUB_OUTPUT"
      - name: Add and Commit files
        run: |
          git add .
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Update submodules at $(date "+DATE: %Y-%m-%d TIME: %H:%M:%S")"
        if: ${{ steps.status.outputs.status }}
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
        if: ${{ steps.status.outputs.status }}

  # Next.jsのサイトをビルド
  build:
    runs-on: ubuntu-latest
    needs: update
    env:
      TZ: "Asia/Tokyo"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: pnpm
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
          generator_config_file: next.config.ts
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-
      - name: Install dependencies
        run: pnpm install
      - name: Build with Next.js
        run: |
          date
          pnpm next build
        env:
          PAGES: true
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # GitHub Pagesへデプロイ
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
